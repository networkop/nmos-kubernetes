apiVersion: v1
kind: Pod
metadata:
  name: nmos-cpp
  labels:
    app.kubernetes.io/name: nmos
  annotations:
    k8s.v1.cni.cncf.io/networks: |
          [
            { "name": "rdmanet-static",
              "ips": [ "192.168.102.254/24" ]
            }
          ]
spec:
  containers:
  - name: nmos-cpp-registry
    image: docker.io/rhastie/nmos-cpp:dev-9302bf5
    #    image: harbor.mellanox.com/nbu-solutions-labs/nmos-cpp:1.2A-7ca64c4
    env:
    - name: RUN_NODE
      value: "false"
    resources:
#      requests:
#        cpu: 2
#        memory: 1Gi
#        nvidia.com/rdmapool: 1
#      limits:
#        cpu: 2
#`        memory: 1Gi
#        nvidia.com/rdmapool: 1
    volumeMounts:
     - mountPath: /home/registry.json
       subPath: registry.json
       name: config-volume
    ports:
      - containerPort: 8010
        name: port-8010
      - containerPort: 8011
        name: port-8011
      - containerPort: 1883
        name: port-1883
      - containerPort: 5353
        name: port-5353
        protocol: UDP
  volumes:
  - configMap:
      defaultMode: 420
      items:
      - key: registry.json
        path: registry.json
      name: nmos-registry
    name: config-volume
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nmos-registry
data: 
  registry.json: | # 4294967295 | 2147483647
   {
     "pri": 2147483647, 
     "logging_level": 0,
     "http_trace": false,
     "label": "nmos-cpp-registry",
     "http_port": 8010,
     "query_ws_port": 8011,
     "registration_expiry_interval": 12
   }
---
apiVersion: v1
kind: Service
metadata:
  name: nmos-cpp-registry
spec:
  selector:
    app.kubernetes.io/name: nmos
  ports:
      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 8010
      name: http-port
      targetPort: 8010
      
---
apiVersion: v1
kind: Service
metadata:
  name: nmos-cpp-registry-external
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: nmos
  ports:
      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 8010
      name: http-port
      targetPort: 8010
      nodePort: 31939
---



# # Ingress resources can be used once NMOS Node can do HTTP requests with "Host: hostname" and not "Host: ip.address"
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: nmos-registry
#spec:
#  rules:
#    - host: registry.nmos.tv
#      http:
#        paths:
#          - path: /
#            pathType: Exact
#            backend:
#              service:
#                name:  nmos-cpp-registry
#                port:
#                  number: 8010
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: nmos-registry-catch-all
#spec:
#  rules:
#    - http:
#        paths:
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name:  nmos-cpp-registry
#                port:
#                  number: 8010
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GatewayClass
metadata:
  name: istio
spec:
  controllerName: istio.io/gateway-controller
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: Gateway
metadata:
  name: gateway
  namespace: istio-ingress
spec:
  gatewayClassName: istio
  listeners:
  - name: default
    port: 80
    protocol: HTTP
    allowedRoutes:
      namespaces:
        from: All
  - name: nmos
    port: 8010
    protocol: TCP
    allowedRoutes:
      namespaces:
        from: All
      kinds:
      - kind: TCPRoute
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: HTTPRoute
metadata:
  name: http
  namespace: default
spec:
  parentRefs:
  - name: gateway
    namespace: istio-ingress
    sectionName: default
  hostnames: ["registry.nmos.tv"]
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: nmos-cpp-registry
      port: 8010
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TCPRoute
metadata:
  name: tcp-app-nmos
  namespace: default
spec:
  parentRefs:
  - name: gateway
    namespace: istio-ingress
    sectionName: nmos
  rules:
  - backendRefs:
    - name: nmos-cpp-registry
      port: 8010
